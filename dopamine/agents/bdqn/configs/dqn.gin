# Hyperparameters follow the classic Nature DQN, but we modify as necessary to
# match those used in Rainbow (Hessel et al., 2018), to ensure apples-to-apples
# comparison.
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.agents.bdqn.bdqn_agent
import dopamine.agents.bdqn.simple_bdqn_agent
import dopamine.replay_memory.circular_replay_buffer
import gin.tf.external_configurables

tf.train.RMSPropOptimizer.learning_rate = 0.0025
tf.train.RMSPropOptimizer.decay = 0.95
tf.train.RMSPropOptimizer.momentum = 0.0
tf.train.RMSPropOptimizer.epsilon = 0.00001
tf.train.RMSPropOptimizer.centered = True

atari_lib.create_atari_environment.game_name = 'Asteroids'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True
create_agent.agent_name = 'simple_bdqn'
Runner.num_iterations = 200
Runner.training_steps = 250000  # agent steps
Runner.evaluation_steps = 50000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

WrappedReplayBuffer.replay_capacity = 1000000
WrappedReplayBuffer.batch_size = 32

BDQNAgent.gamma = 0.99
BDQNAgent.update_horizon = 150
BDQNAgent.min_replay_history = 20000
BDQNAgent.update_period = 4
BDQNAgent.target_update_period = 8000
BDQNAgent.tf_device = '/cpu:*'  # use '/cpu:*' for non-GPU version
BDQNAgent.optimizer = @tf.train.RMSPropOptimizer()


